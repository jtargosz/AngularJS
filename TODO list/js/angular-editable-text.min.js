!function(){"use strict";angular.module("gg.editableText",[])}(),function(){"use strict";angular.module("gg.editableText").directive("editableText",["EditableTextHelper",function(e){return{scope:{editableText:"=",editMode:"=",onChange:"&"},transclude:!0,template:'<span><input ng-show="isEditing" ng-blur="isEditing=false;" ng-model="editingValue"/><span ng-hide="isEditing || isWorking" class="original-text" ng-click="isEditing=true" >{{editingValue}} </span><span ng-hide="isEditing" ng-transclude></span><span ng-show="isWorking" class="'+e.workingClassName+'">'+e.workingText+"</span></span>",link:function(e,i,t){var n,a=i.find("input");e.isEditing=!!e.editMode,e.editingValue=e.editableText,i.addClass("gg-editable-text"),e.$watch("isEditing",function(d,g){var s,l=a[0];void 0!==t.editMode&&(e.editMode=d),i[d?"addClass":"removeClass"]("editing"),d?(l.focus(),l.selectionStart=l.selectionEnd=e.editingValue.length):e.onChange&&d!==g&&e.editingValue!=n?(s=e.onChange({value:e.editingValue}),s&&s.then?(e.isWorking=!0,s.then(function(i){e.editableText=e.editingValue=i,e.isWorking=!1},function(){e.editingValue=e.editableText,e.isWorking=!1})):s?e.editableText=e.editingValue=s:e.editingValue=e.editableText):e.editableText=e.editingValue}),e.$watch("editMode",function(i){e.isEditing=!!i}),e.$watch("editableText",function(i){n=i,e.editingValue=i})}}}])}(),angular.module("gg.editableText").provider("EditableTextHelper",function(){var e="Working..",i="";this.setWorkingText=function(i){return e=i,this},this.setWorkingClassName=function(e){return i=e,this},this.$get=function(){return{workingText:e,workingClassName:i}}});